apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

ext.versionMajor = 4
ext.versionMinor = 1
ext.versionPatch = 0
ext.postfix = ''

android {
    compileSdkVersion 27
    buildToolsVersion '28.0.1'

    defaultConfig {
        applicationId 'ua.napps.scorekeeper'
        minSdkVersion 19
        targetSdkVersion 27
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        versionCode generateVersionCode()
        versionName generateVersionName()
        resConfigs "en", "ru", "uk", "fr"

        manifestPlaceholders += [
                crashlyticsEnabled: false
        ]
    }

    signingConfigs {
        release {
            storeFile new File(STORE_FILE)
            storePassword STORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders += [crashlyticsEnabled: true]
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

ext {
    // App dependencies
    supportLibraryVersion = '27.1.1'
    archLifecycleVersion = "1.1.1"
    archRoomVersion = "1.1.1"
    materialDialogsVersion = "0.9.6.0"
}

dependencies {
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:support-vector-drawable:$supportLibraryVersion"
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support:support-vector-drawable:$supportLibraryVersion"
    implementation "com.android.support:support-dynamic-animation:$supportLibraryVersion"
    implementation "android.arch.lifecycle:extensions:$archLifecycleVersion"
    implementation "android.arch.persistence.room:runtime:$archRoomVersion"
    implementation "com.afollestad.material-dialogs:core:$materialDialogsVersion"
    implementation "com.afollestad.material-dialogs:commons:$materialDialogsVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive = true
    }
    implementation('com.github.fernandodev.easyratingdialog:easyratingdialog:1.1.2') {
        exclude module: 'material-dialogs'
    }
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.16'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.ashokvarma.android:bottom-navigation-bar:2.0.4'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'

    annotationProcessor "android.arch.lifecycle:compiler:$archLifecycleVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$archRoomVersion"
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "$supportLibraryVersion"
            }
        }
    }
}

def generateVersionCode() {
    return ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

def generateVersionName() {
    return "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}${ext.postfix}"
}

task _printVersion << {
    println "\n==================================================================================="
    println "VERSION CODE: " + generateVersionCode()
    println "===================================================================================\n"
}

task _printVersionName << {
    println "\n==================================================================================="
    println "VERSION NAME: " + generateVersionName()
    println "===================================================================================\n"
}

apply plugin: 'com.google.gms.google-services'
