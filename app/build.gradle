apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'io.fabric'

ext.versionMajor = 3
ext.versionMinor = 0
ext.versionPatch = 3

android {
    compileSdkVersion 27
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId 'ua.napps.scorekeeper'
        minSdkVersion 19
        targetSdkVersion 27
        vectorDrawables.useSupportLibrary = true
        versionCode generateVersionCode()
        versionName generateVersionName()
        resConfigs "en", "ru", "uk", "fr"
    }

    signingConfigs {
        release {
            storeFile new File(STORE_FILE)
            storePassword STORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            useProguard false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //noinspection GroovyAssignabilityCheck
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

ext {
    // App dependencies
    supportLibraryVersion = '27.0.0'
    archLifecycleVersion = "1.0.0"
    archRoomVersion = "1.0.0"
    materialDialogsVersion = "0.9.5.0"
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:appcompat-v7:$supportLibraryVersion"
    compile "com.android.support:design:$supportLibraryVersion"
    compile "com.android.support:cardview-v7:$supportLibraryVersion"
    compile "com.android.support:support-vector-drawable:$supportLibraryVersion"
    compile "com.android.support:support-dynamic-animation:$supportLibraryVersion"
    compile "android.arch.lifecycle:extensions:$archLifecycleVersion"
    compile "android.arch.persistence.room:runtime:$archRoomVersion"
    compile "com.afollestad.material-dialogs:core:$materialDialogsVersion"
    compile "com.afollestad.material-dialogs:commons:$materialDialogsVersion"
    compile 'com.google.firebase:firebase-core:11.6.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.6'
    compile 'com.google.android:flexbox:0.3.1'
    compile 'com.dmitrymalkovich.android:material-design-dimens:1.4'
    compile 'com.jakewharton.timber:timber:4.6.0'

    annotationProcessor "android.arch.lifecycle:compiler:$archLifecycleVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$archRoomVersion"
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "$supportLibraryVersion"
            }
        }
    }
}

def generateVersionCode() {
    return ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

def generateVersionName() {
    return "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
}

task _printVersion << {
    println "\n==================================================================================="
    println "VERSION CODE: " + generateVersionCode()
    println "===================================================================================\n"
}

apply plugin: 'com.google.gms.google-services'